# syntax=docker/dockerfile:1.6

# =========================================================
# == STAGE 1: BUILDER - Build Python wheels once
# =========================================================
FROM python:3.10-slim AS builder
LABEL stage=builder
ENV PIP_DISABLE_PIP_VERSION_CHECK=1 PIP_NO_CACHE_DIR=1 PYTHONUNBUFFERED=1 APP_ROOT_DIR=/opt/app
WORKDIR ${APP_ROOT_DIR}

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential python3-dev curl libmagic1 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# --- DÉPENDANCES PYTHON NÉCESSAIRES POUR LE DEV MODE ---
COPY llmbasedos_src/requirements.txt /tmp/reqs/base.txt
RUN --mount=type=cache,target=/root/.cache/pip pip wheel --wheel-dir /tmp/wheels -r /tmp/reqs/base.txt

COPY llmbasedos_src/gateway/requirements.txt /tmp/reqs/gateway.txt
RUN --mount=type=cache,target=/root/.cache/pip pip wheel --wheel-dir /tmp/wheels -r /tmp/reqs/gateway.txt

COPY llmbasedos_src/servers/llm_router/requirements.txt /tmp/reqs/llm_router.txt
RUN --mount=type=cache,target=/root/.cache/pip pip wheel --wheel-dir /tmp/wheels -r /tmp/reqs/llm_router.txt

COPY llmbasedos_src/servers/memobase/requirements.txt /tmp/reqs/memobase.txt
RUN --mount=type=cache,target=/root/.cache/pip pip wheel --wheel-dir /tmp/wheels -r /tmp/reqs/memobase.txt

COPY llmbasedos_src/shell/requirements.txt /tmp/reqs/shell.txt
RUN --mount=type=cache,target=/root/.cache/pip pip wheel --wheel-dir /tmp/wheels -r /tmp/reqs/shell.txt

# --- BUILDER: fs ---
COPY llmbasedos_src/servers/fs/requirements.txt /tmp/reqs/fs.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip wheel --wheel-dir /tmp/wheels -r /tmp/reqs/fs.txt


# =========================================================
# == STAGE 2: RUNTIME - Lightweight final image
# =========================================================
FROM python:3.10-slim
LABEL description="LLMbasedOS DEV image"
ENV PYTHONUNBUFFERED=1 PYTHONDONTWRITEBYTECODE=1 APP_ROOT_DIR=/opt/app

WORKDIR ${APP_ROOT_DIR}

RUN apt-get update && apt-get install -y --no-install-recommends \
    supervisor curl libmagic1 nodejs npm gosu \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

COPY --from=builder /tmp/wheels /tmp/wheels

# INSTALLATION DES DÉPENDANCES
COPY llmbasedos_src/requirements.txt /tmp/reqs/base.txt
RUN pip install --no-index --find-links=/tmp/wheels -r /tmp/reqs/base.txt

COPY llmbasedos_src/gateway/requirements.txt /tmp/reqs/gateway.txt
RUN pip install --no-index --find-links=/tmp/wheels -r /tmp/reqs/gateway.txt

COPY llmbasedos_src/servers/llm_router/requirements.txt /tmp/reqs/llm_router.txt
RUN pip install --no-index --find-links=/tmp/wheels -r /tmp/reqs/llm_router.txt

COPY llmbasedos_src/servers/memobase/requirements.txt /tmp/reqs/memobase.txt
RUN pip install --no-index --find-links=/tmp/wheels -r /tmp/reqs/memobase.txt

COPY llmbasedos_src/shell/requirements.txt /tmp/reqs/shell.txt
RUN pip install --no-index --find-links=/tmp/wheels -r /tmp/reqs/shell.txt

# --- RUNTIME: fs ---
COPY llmbasedos_src/servers/fs/requirements.txt /tmp/reqs/fs.txt
RUN pip install --no-index --find-links=/tmp/wheels -r /tmp/reqs/fs.txt



RUN rm -rf /tmp/reqs /tmp/wheels

# --- UTILISATEUR ET PERMISSIONS ---
ARG APP_USER=llmuser
ARG DOCKER_GID
RUN groupadd -g ${DOCKER_GID:-999} docker && \
    useradd -ms /bin/bash ${APP_USER} && usermod -aG docker ${APP_USER} && \
    mkdir -p /run/mcp /var/log/supervisor /data && \
    chown -R ${APP_USER}:${APP_USER} /data /run/mcp

# --- COPIE DES SCRIPTS (SERONT MASQUÉS PAR LES VOLUMES) ---
COPY ./entrypoint.sh /opt/app/entrypoint.sh
RUN chmod +x /opt/app/entrypoint.sh

ENV PYTHONPATH=/opt/app

# --- COMMANDE D'EXÉCUTION ---
ENTRYPOINT ["/opt/app/entrypoint.sh"]
CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/conf.d/llmbasedos.conf"]