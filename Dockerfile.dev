# syntax=docker/dockerfile:1.6

# =========================================================
# == STAGE 1: BUILDER - Build Python wheels once
# =========================================================
FROM python:3.10-slim AS builder
LABEL stage=builder
ENV PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_NO_CACHE_DIR=1 \
    PYTHONUNBUFFERED=1 \
    APP_ROOT_DIR=/opt/app

WORKDIR ${APP_ROOT_DIR}

# Install minimal system deps for Python packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    python3-dev \
    curl \
    libmagic1 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# --- Base shared dependencies (common to all services) ---
COPY llmbasedos_src/requirements.txt /tmp/reqs/base.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip wheel --wheel-dir /tmp/wheels -r /tmp/reqs/base.txt

# --- Gateway ---
COPY llmbasedos_src/gateway/requirements.txt /tmp/reqs/gateway.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip wheel --wheel-dir /tmp/wheels -r /tmp/reqs/gateway.txt

# --- LLM Router ---
COPY llmbasedos_src/servers/llm_router/requirements.txt /tmp/reqs/llm_router.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip wheel --wheel-dir /tmp/wheels -r /tmp/reqs/llm_router.txt

# --- Memobase ---
COPY llmbasedos_src/servers/memobase/requirements.txt /tmp/reqs/memobase.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip wheel --wheel-dir /tmp/wheels -r /tmp/reqs/memobase.txt


# =========================================================
# == STAGE 2: RUNTIME - Lightweight final image
# =========================================================
FROM python:3.10-slim
LABEL description="LLMbasedOS DEV image - Gateway, Router, Memobase only"

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    APP_ROOT_DIR=/opt/app \
    HF_HOME=/data/hf_cache

WORKDIR ${APP_ROOT_DIR}

# Minimal runtime deps
RUN apt-get update && apt-get install -y --no-install-recommends \
    supervisor \
    curl \
    libmagic1 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy wheels from builder
COPY --from=builder /tmp/wheels /tmp/wheels

# Install only what's needed
COPY llmbasedos_src/requirements.txt /tmp/reqs/base.txt
RUN pip install --no-index --find-links=/tmp/wheels -r /tmp/reqs/base.txt

COPY llmbasedos_src/gateway/requirements.txt /tmp/reqs/gateway.txt
RUN pip install --no-index --find-links=/tmp/wheels -r /tmp/reqs/gateway.txt

COPY llmbasedos_src/servers/llm_router/requirements.txt /tmp/reqs/llm_router.txt
RUN pip install --no-index --find-links=/tmp/wheels -r /tmp/reqs/llm_router.txt

COPY llmbasedos_src/servers/memobase/requirements.txt /tmp/reqs/memobase.txt
RUN pip install --no-index --find-links=/tmp/wheels -r /tmp/reqs/memobase.txt

# Cleanup
RUN rm -rf /tmp/reqs /tmp/wheels

# Create app user
ARG APP_USER=llmuser
RUN useradd -ms /bin/bash ${APP_USER} \
    && mkdir -p /run/mcp /var/log/supervisor /data \
    && chown -R ${APP_USER}:${APP_USER} ${APP_ROOT_DIR} /data /run/mcp

# Copy application
COPY ./llmbasedos_src ${APP_ROOT_DIR}/llmbasedos_src
COPY ./supervisord.conf /etc/supervisor/conf.d/llmbasedos.conf
COPY ./entrypoint.sh /opt/app/entrypoint.sh
RUN chmod +x /opt/app/entrypoint.sh

ENV PYTHONPATH=/opt/app

ENTRYPOINT ["/opt/app/entrypoint.sh"]
CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/conf.d/llmbasedos.conf"]
